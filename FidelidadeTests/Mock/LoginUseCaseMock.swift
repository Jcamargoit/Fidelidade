///
/// @Generated by Mockolo
///

import Fidelidade
import UIKit


class LoginUseCaseProtocolMock: LoginUseCaseProtocol {
    init() { }
    init(url: ApiJavaEndPoints = ApiJavaEndPoints.login, body: Data? = nil) {
        self._url = url
        self.body = body
    }


    private(set) var urlSetCallCount = 0
    private var _url: ApiJavaEndPoints!  { didSet { urlSetCallCount += 1 } }
    var url: ApiJavaEndPoints {
        get { return _url }
        set { _url = newValue }
    }

    private(set) var bodySetCallCount = 0
    var body: Data? = nil { didSet { bodySetCallCount += 1 } }

    private(set) var handleLoginCallCount = 0
    var handleLoginHandler: ((LoginModel, @escaping (Result<String, NetworkError>) -> Void) -> ())?
    func handleLogin(loginModel: LoginModel, completion: @escaping (Result<String, NetworkError>) -> Void)  {
        handleLoginCallCount += 1
        if let handleLoginHandler = handleLoginHandler {
            handleLoginHandler(loginModel, completion)
        }

    }
}
